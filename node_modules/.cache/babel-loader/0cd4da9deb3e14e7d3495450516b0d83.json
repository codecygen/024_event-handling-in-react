{"ast":null,"code":"import _slicedToArray from \"/home/gingerbreadcookies/Desktop/024_event-handling-in-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/gingerbreadcookies/Desktop/024_event-handling-in-react/src/components/App.jsx\";\n\nimport React, { useState } from \"react\";\n\nvar App = function App() {\n  var _useState = useState('Mouse not hovered on button!'),\n      _useState2 = _slicedToArray(_useState, 2),\n      headingText = _useState2[0],\n      setHeadingText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submittedName = _useState4[0],\n      setSubmittedName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      submittedLastName = _useState6[0],\n      setSubmittedLastName = _useState6[1];\n\n  var _useState7 = useState('white'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      buttonColor = _useState8[0],\n      setButtonColor = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      name = _useState10[0],\n      setName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      lastName = _useState12[0],\n      setLastName = _useState12[1];\n\n  var handleClick = function handleClick() {\n    setHeadingText('Clicked!');\n    setSubmittedName(name);\n    setSubmittedLastName(lastName);\n  };\n\n  var handleMouseOver = function handleMouseOver() {\n    setHeadingText('Mouse Over!');\n    setButtonColor('black');\n  };\n\n  var handleMouseOut = function handleMouseOut() {\n    setHeadingText('Mouse Out!');\n    setButtonColor('white');\n  };\n\n  var handleNameChange = function handleNameChange(e) {\n    console.log(e.target.value);\n    setName(e.target.value);\n  };\n\n  var handleLastNameChange = function handleLastNameChange(e) {\n    console.log(e.target.value);\n    setLastName(e.target.value);\n  }; // In HTML, elements are responsible of handling their own state.\n  // For example, if you type in an input element, the value will be\n  // equal to the one that you already typed.\n  // In React, however, you have to set the value property to the \n  // Thing you typed manually.\n  // Alternative solution for \"onClick={handleClick}\" for button element\n  // would be to wrap entire thing with form element (input and button elements),\n  // replace \"onClick={handleClick}\" with \"type='submit\", then\n  // in form element, as an attribute add this \"onSubmit={handleClick}\"\n  // In this case you have to pass an argument inside \"handleClick(e)\" function,\n  // Inside it write \"e.preventDefault();\"\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Hello \", submittedName, \" \", submittedLastName), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"You typed \", name, \" \", lastName), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, headingText), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"First Name\",\n    onChange: handleNameChange,\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Last Name\",\n    onChange: handleLastNameChange,\n    value: lastName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      backgroundColor: buttonColor\n    },\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/gingerbreadcookies/Desktop/024_event-handling-in-react/src/components/App.jsx"],"names":["React","useState","App","headingText","setHeadingText","submittedName","setSubmittedName","submittedLastName","setSubmittedLastName","buttonColor","setButtonColor","name","setName","lastName","setLastName","handleClick","handleMouseOver","handleMouseOut","handleNameChange","e","console","log","target","value","handleLastNameChange","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\n\nconst App = () => {\n\n\n  const [headingText, setHeadingText] = useState('Mouse not hovered on button!');\n  const [submittedName, setSubmittedName] = useState('');\n  const [submittedLastName, setSubmittedLastName] = useState('');\n  const [buttonColor, setButtonColor] = useState('white');\n  const [name, setName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleClick = () => {\n    setHeadingText('Clicked!');\n    setSubmittedName(name);\n    setSubmittedLastName(lastName);\n  }\n  \n  const handleMouseOver = () => {\n    setHeadingText('Mouse Over!');\n    setButtonColor('black');\n  }\n\n  const handleMouseOut = () => {\n    setHeadingText('Mouse Out!');\n    setButtonColor('white');\n  }\n\n  const handleNameChange = (e) => {\n    console.log(e.target.value);\n    setName(e.target.value);\n  }\n\n  const handleLastNameChange = (e) => {\n    console.log(e.target.value);\n    setLastName(e.target.value);\n  }\n\n  // In HTML, elements are responsible of handling their own state.\n  // For example, if you type in an input element, the value will be\n  // equal to the one that you already typed.\n\n  // In React, however, you have to set the value property to the \n  // Thing you typed manually.\n\n  // Alternative solution for \"onClick={handleClick}\" for button element\n  // would be to wrap entire thing with form element (input and button elements),\n  // replace \"onClick={handleClick}\" with \"type='submit\", then\n  // in form element, as an attribute add this \"onSubmit={handleClick}\"\n  // In this case you have to pass an argument inside \"handleClick(e)\" function,\n  // Inside it write \"e.preventDefault();\"\n\n  return (\n    <div className=\"container\">\n      <h1>Hello {submittedName} {submittedLastName}</h1>\n      <h1>You typed {name} {lastName}</h1>\n      <h1>{headingText}</h1>\n      <input \n      type=\"text\" \n      placeholder=\"First Name\" \n      onChange={handleNameChange}\n      value={name} />\n\n      <input \n        type='text' \n        placeholder='Last Name' \n        onChange={handleLastNameChange} \n        value={lastName} />\n      \n      <button \n        style={{backgroundColor: buttonColor}} \n        onMouseOver={handleMouseOver} \n        onMouseOut={handleMouseOut} \n        onClick={handleClick}>Submit</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}